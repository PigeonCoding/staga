"--printing:" .
"Hello, World" . // string printing
69 . # int printing (only unsigned)

"\n--arithmetics:" .
-5 5  +  "-5 + 5 : " print .
6 1   -  "6  - 1 : " print .
2 10  *  "2  * 10: " print .
10 5  /  "10 / 5 : " print .

"\n--condition:" .
5 10 < "5 < 10: " print .
5 10 > "5 > 10: " print .
5 5  = "5 = 5 : " print .
"please note: the result of the condition check is pushed to the stack that is why we can just print it since internally it is just an int" .


"\n--if-else:" .
1 0 > if "condition is true" else "condition is false" done .
69 if "value isn't zero" else "it is zero" done .

"\n--while:" .
0 while dup 20 < do dup . 1 + end

"\n--stack manipulation:" . 
1 2 3 2 swap . . .
69 dup print " " print .

"\n--memory:" .
"this was stores and loaded from memory" 1 mems
1 meml .

"\n--macros:" .
macro test1_ // start of a macro names test1_
  69 dup . 
  351 + .
mend // end of the macro
test1_ // calling the macro